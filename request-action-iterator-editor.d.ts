/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   request-action-iterator-editor.html
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../paper-input/paper-input.d.ts" />
/// <reference path="../paper-dropdown-menu/paper-dropdown-menu-light.d.ts" />
/// <reference path="../paper-listbox/paper-listbox.d.ts" />
/// <reference path="../paper-item/paper-item.d.ts" />
/// <reference path="condition-operator-dropdown.d.ts" />

declare namespace UiElements {

  /**
   * An editor for response iterator.
   *
   * It creates data model that is accetable in ARC elements ecosystem for creating iteration over a value (JSON, XML).
   *
   * Actions runner use this information to iterate over iterable objects like arrays or JS object.
   * Once it finds the match it returns the entire object to the action runner and
   * it takes the value from this object.
   *
   * ### Data model
   *
   * Condition data model is:
   *
   * ```javascript
   * {
   *    source: 'String', // See below for detailed description.
   *    operator: 'String', // see below for list of all operators
   *    condition: 'any' // value to use to compare the value get from the `source` property
   * }
   * ```
   *
   * #### source
   *
   * Path to the data. The iterable should be marked with `*` character.
   *
   * #### operator
   *
   * Operator can be one of:
   * - equal
   * - not-equal
   * - greater-than
   * - greater-than-equal
   * - less-than
   * - less-than-equal
   * - contains
   * - regexp
   *
   * Contains can operate on strings, simple arrays (e.g. `['test', 123]`) or objects (e.g. {'key':'value'}).
   *
   * ### Examples
   *
   * __Getting value from the same object.__
   *
   * ```javascript
   * // Action configuration
   * const config = {
   *    source: 'id',
   *    action: 'assign-variable',
   *    destination: 'personId',
   *    iterator: {
   *      source: 'items.*.name',
   *      operator: 'equal',
   *      condition: 'Smith'
   *    }
   *  }
   *  // Response
   *  const response = {
   *    items: [{
   *      id: 1234,
   *      name: 'Brown'
   *    }, {
   *      id: 5678,
   *      name: 'Smith'
   *    }]
   *  }
   * ```
   * Result of the above model would result with assigning `5678` to `personId` variable.
   *
   * __Getting value from nested object.__
   *
   * ```javascript
   * // Action configuration
   * const config = {
   *    source: 'address.zip',
   *    action: 'assign-variable',
   *    destination: 'personZip',
   *    iterator: {
   *      source: 'items.*.name',
   *      operator: 'equal',
   *      condition: 'Brown'
   *    }
   * }
   * // Response
   * const response = {
   *    items: [{
   *      id: 1234,
   *      name: 'Brown',
   *      address: {
   *        zip: 94101
   *      }
   *    }, {
   *      id: 5678,
   *      name: 'Smith',
   *      address: {
   *        zip: 94104
   *      }
   *    }]
   * }
   * ```
   *
   * Result of the above model would result with assigning `94101` to `personZip` variable.
   *
   * ### Styling
   *
   * `<request-action-iterator-editor>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--request-action-iterator-editor` | Mixin applied to the element | `{}`
   * `--request-action-iterator-editor-background-color` | Background color of the editor | `#fff`
   */
  class RequestActionIteratorEditor extends Polymer.Element {

    /**
     * Model for iterator.
     */
    iterator: object|null|undefined;

    /**
     * Renders the editor in read only mode
     */
    readonly: boolean|null|undefined;
  }
}

interface HTMLElementTagNameMap {
  "request-action-iterator-editor": UiElements.RequestActionIteratorEditor;
}
